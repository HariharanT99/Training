@model DAL.ViewModel.EntryViewModel

@{
    ViewBag.Title = "CreateEntry";
}

<div class="row ml-2">
    <div class="col-12 col-sm-4 ml-3">
        <h1>CreateEntry</h1>
    </div>
</div>

<div class="row justify-content-start">
    <div class="col-sm-7">
        <hr />
    </div>
    <div class="col-sm-3 text-right">
        <h2>User Info</h2>
    </div>
</div>

    <div class="row">
    <div class="col-12 col-sm-8">
        <form method="post" asp-controller="Employee" asp-action="CreateEntry">
            <div class="container">
                <div class="row">
                    <div class="col-12 col-sm-10 text-center text-floral">
                        <h3>Entry Form</h3>
                    </div>
                </div>

                <div class="row justify-content-center mt-3">
                    <div class="col-12 col-sm-2 align-self-center">
                        @Html.LabelFor(model => model.Date, new { @class = "control-lable text-lg" })
                    </div>
                    <div class="col-12 col-sm-3 mr-5">
                        <input class="form-control" type="date" data-val="true" data-val-required="Date is Required" id="date" name="date" />
                    </div>
                    <span class="val" asp-validation-for="Date"></span>
                </div>

                <div class="row justify-content-center mt-3">
                    <div class="col-12 col-sm-2 align-self-center">
                        @Html.LabelFor(model => model.InTime, new { @class = "control-lable text-lg" })
                    </div>
                    <div class="col-12 col-sm-3 mr-5 ">
                        <input class="form-control" type="time" data-val="true" data-val-required="InTime is Required" id="intime" name="intime" />
                    </div>
                    @Html.ValidationMessageFor(model => model.InTime, "", new { @class = "text-white" })
                </div>

                <div class="row justify-content-center mt-3">
                    <div class="col-12 col-sm-2 align-self-center">
                        @Html.LabelFor(model => model.OutTime, new { @class = "control-lable text-lg" })
                    </div>
                    <div class="col-12 col-sm-3 mr-5">
                        <input class="form-control" type="time" data-val="true" data-val-required="OutTime is Required" id="outtime" name="outtime" />
                    </div>
                    @Html.ValidationMessageFor(model => model.OutTime, "", new { @class = "text-white" })
                </div>

                <div class="row justify-content-start">
                    <div class="col-sm-11">
                        <hr />
                    </div>
                </div>

                <div class="row justify-content-center mt-3">
                    <div class="col-12 col-sm-10 offset-sm-2 align-self-center">
                        <table id="BreakTable" class="table table-borderless table-sm">
                            <thead>
                                <tr>
                                    <th>
                                        BreakFrom
                                    </th>
                                    <th>
                                        BreakTo
                                    </th>
                                    <th>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.BreakList.Count; i++)
                                {
                                    <tr>
                                        <td>
                                            @Html.EditorFor(model => model.BreakList[i].BreakIn, new { htmlAttributes = new { @class = "form-control" } })
                                        </td>
                                        <td>
                                            @Html.EditorFor(model => model.BreakList[i].BreakOut, new { htmlAttributes = new { @class = "form-control" } })
                                        </td>
                                        <td>

                                            <button type="button" id="btnadd-@i" class="btn btn-sm btn-info btn-outline-dark visible bta"
                                                    onclick="AddItem(this)">
                                                <i class="fa fa-plus"> Add</i>
                                            </button>
                                            <button type="button" id="btnremove-@i" class="btn btn-sm btn-danger btn-outline-dark btd invisible"
                                                    onclick="DeleteItem(this)">
                                                <i class="fa fa-trash-alt"> Delete</i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <input type="hidden" id="hasLastIndex" value="0" />
                    <input type="hidden" asp-for="EmployeeId" value="@ViewBag.User.Id" /> 
                </div>

                <div class="row justify-content-center">
                    <div class="col-12 col-sm-2 offset-sm-8">
                        <input type="submit" class="btn bts" value="save" />
                    </div>
                </div>
            </div>
        </form>

    </div>
    <div class="col-sm-3 ml-5 mt-4">
        <h5 class="mt-3">Name: @ViewBag.User.Name</h5>
        <h5 class="mt-3">Email: @ViewBag.User.Email</h5>
        <div class="d-grid gap-2 mt-5">
            <a type="button" class="button button-emp btn-warning" asp-controller="Employee" asp-action="Dashboard" asp-route-id="@ViewBag.User.Id"><span><i class="fa fa-chart-line"> Dashboard</i> </span></a>
        </div>
        <div class="d-grid gap-2 mt-5">
            <a type="button" class="button button-emp btn-warning" asp-controller="Employee" asp-action="Index"><span><i class="fa fa-home"> Home</i> </span></a>
        </div>
    </div>
</div>

@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">

        function DeleteItem(btn) {
            $(btn).closest('tr').remove();
        }

        function AddItem(btn) {
            var table = document.getElementById('BreakTable');
            var rows = table.getElementsByTagName('tr');

            var rowOuterHtml = rows[rows.length - 1].outerHTML;

            var lastrowIdx = document.getElementById('hasLastIndex').value;

            var nextrowIdx = eval(lastrowIdx) + 1;

            document.getElementById('hasLastIndex').value = nextrowIdx;

            rowOuterHtml = rowOuterHtml.replaceAll('_' + lastrowIdx + '_', '_' + nextrowIdx + '_');
            rowOuterHtml = rowOuterHtml.replaceAll('[' + lastrowIdx + ']', '[' + nextrowIdx + ']');
            rowOuterHtml = rowOuterHtml.replaceAll('_' + lastrowIdx, '_' + nextrowIdx);

            var newRow = table.insertRow();
            newRow.innerHTML = rowOuterHtml;

            var btnAddID = btn.id;

            var btnDeleteID = btnAddID.replaceAll('btnadd', 'btnremove');

            var delbtn = document.getElementById(btnDeleteID);
            delbtn.classList.add('visible');
            delbtn.classList.remove('invisible');

            var addbtn = document.getElementById(btnAddID);
            addbtn.classList.remove('visible');
            addbtn.classList.add('invisible');

        }
    </script>
}


@*@for (int i = 0; i < Model.BreakList.Count; i++)
    {
        <input type="hidden" id="Id" value="@Model.Id" />

        //<input hidden name="entryid@{i}" value="@{Model.Id} " />
        <div class="col-12 col-sm-6 offset-sm-3">
            @Html.EditorFor(model => model.BreakList[i].BreakIn, new { htmlAttributes = new { @class = "form-comtrol" } })
            @Html.EditorFor(model => model.BreakList[i].BreakOut, new { htmlAttributes = new { @class = "form-comtrol" } })
        </div>
        <div class="col-12 col-sm-3">
            <button id="btnadd-@i" type="button" class="btn btn-sm btn-secondary visible"
                    onclick="AddItem(this)" style="left:90%;position:absolute;">
                Add
            </button>
            <button id="btnremove-@i" type="button" class="btn btn-sm btn-danger invisible"
                    onclick="DeleteItem(this)" style="left:90%;position:absolute;">
                Delete
            </button>
        </div>
    }

    <input type="hidden" id="hasLastIndex" value="0" />*@